services:

  # Backend API Service
  backend:
    build:
      context: ..
      dockerfile: Pre-Prod/Dockerfile.backend
    container_name: allemny_backend
    environment:
      - DATABASE_URL=postgresql://allemny_find:${DB_PASSWORD:-AFbqSrE?h8bPjSCs9#}@172.17.0.1:5432/allemny_find_v2
      - REDIS_URL=redis://172.17.0.1:6379/0
      - OLLAMA_BASE_URL=http://172.17.0.1:11434
      - GROQ_API_KEY=${GROQ_API_KEY:-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}
      - SECRET_KEY=${SECRET_KEY:-allemny-find-super-secret-key-change-in-production-2024}
      - ENVIRONMENT=production
    ports:
      - "${BACKEND_PORT:-8002}:8002"
    volumes:
      - document_storage:/app/document_storage
      - backend_logs:/app/logs
    network_mode: bridge
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8002/health || curl -f http://localhost:8002/ || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 120s
    restart: unless-stopped

  # Frontend Web Application
  frontend:
    build:
      context: ..
      dockerfile: Pre-Prod/Dockerfile.frontend
    container_name: allemny_frontend
    environment:
      - FRONTEND_PORT=${FRONTEND_PORT:-3001}
      - BACKEND_PORT=${BACKEND_PORT:-8002}
    ports:
      - "${FRONTEND_PORT:-3001}:${FRONTEND_PORT:-3001}"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${FRONTEND_PORT:-3001}/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional for production)
  nginx:
    image: nginx:alpine
    container_name: allemny_nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    profiles: ["production"]

volumes:
  document_storage:
    driver: local
  backend_logs:
    driver: local

