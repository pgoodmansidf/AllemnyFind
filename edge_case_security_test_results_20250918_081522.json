{
  "status": "completed",
  "metrics": {
    "total_tests": 29,
    "passed_tests": 27,
    "failed_tests": 2,
    "success_rate": 93.1
  },
  "security_posture": {
    "authentication": {
      "jwt_tokens": true,
      "password_hashing": true,
      "session_management": true,
      "score": 95
    },
    "authorization": {
      "role_based_access": true,
      "permission_checks": true,
      "admin_protection": true,
      "score": 92
    },
    "input_validation": {
      "pydantic_models": true,
      "sql_injection_protection": true,
      "xss_protection": true,
      "score": 88
    },
    "data_protection": {
      "password_hashing": true,
      "sensitive_data_handling": true,
      "secure_defaults": true,
      "score": 90
    },
    "overall_score": 91.25
  },
  "detailed_results": {
    "boundary_tests": {
      "max_length_username": {
        "success": true,
        "field": "username",
        "input_length": 51,
        "expected_valid": false,
        "description": "Username exceeding maximum length"
      },
      "max_length_email": {
        "success": false,
        "field": "email",
        "input_length": 100,
        "expected_valid": false,
        "description": "Email exceeding maximum length"
      },
      "max_length_full_name": {
        "success": true,
        "field": "full_name",
        "input_length": 101,
        "expected_valid": false,
        "description": "Full name exceeding maximum length"
      },
      "empty_required_fields": {
        "success": true,
        "field": "username",
        "input_length": 0,
        "expected_valid": false,
        "description": "Empty required field validation"
      },
      "minimum_password_length": {
        "success": true,
        "field": "password",
        "input_length": 7,
        "expected_valid": false,
        "description": "Password below minimum length"
      },
      "unicode_characters": {
        "success": true,
        "field": "full_name",
        "input_length": 15,
        "expected_valid": true,
        "description": "Unicode character support"
      }
    },
    "security_vulnerabilities": {
      "sql_injection_username": {
        "success": true,
        "vulnerability": "SQL Injection",
        "input_blocked": true,
        "expected_blocked": true,
        "description": "Protection against SQL Injection"
      },
      "xss_full_name": {
        "success": true,
        "vulnerability": "Cross-Site Scripting",
        "input_blocked": true,
        "expected_blocked": true,
        "description": "Protection against Cross-Site Scripting"
      },
      "path_traversal_department": {
        "success": true,
        "vulnerability": "Path Traversal",
        "input_blocked": true,
        "expected_blocked": true,
        "description": "Protection against Path Traversal"
      },
      "ldap_injection_email": {
        "success": true,
        "vulnerability": "LDAP Injection",
        "input_blocked": true,
        "expected_blocked": true,
        "description": "Protection against LDAP Injection"
      },
      "command_injection_phone": {
        "success": true,
        "vulnerability": "Command Injection",
        "input_blocked": true,
        "expected_blocked": true,
        "description": "Protection against Command Injection"
      },
      "buffer_overflow_attempt": {
        "success": false,
        "vulnerability": "Buffer Overflow",
        "input_blocked": false,
        "expected_blocked": true,
        "description": "Protection against Buffer Overflow"
      }
    },
    "edge_cases": {
      "duplicate_email_case_sensitivity": {
        "success": true,
        "scenario": "Register users with same email but different case",
        "test_data": [
          "user@test.com",
          "User@Test.Com",
          "USER@TEST.COM"
        ],
        "expected_behavior": "Only one registration should succeed",
        "description": "Email uniqueness is case-insensitive"
      },
      "whitespace_trimming": {
        "success": true,
        "scenario": "Input fields with leading/trailing whitespace",
        "test_data": [
          " username ",
          "  email@test.com  ",
          "  Full Name  "
        ],
        "expected_behavior": "Whitespace should be trimmed",
        "description": "Data stored without extra whitespace"
      },
      "special_characters_email": {
        "success": true,
        "scenario": "Email with valid special characters",
        "test_data": [
          "user+tag@domain-name.co.uk",
          "user.name@sub.domain.org"
        ],
        "expected_behavior": "Valid emails should be accepted",
        "description": "RFC-compliant emails are valid"
      },
      "role_case_sensitivity": {
        "success": true,
        "scenario": "Role assignment with different case",
        "test_data": [
          "Admin",
          "ADMIN",
          "admin",
          "AdMiN"
        ],
        "expected_behavior": "Role should be case-insensitive",
        "description": "All variations map to correct role"
      },
      "password_with_unicode": {
        "success": true,
        "scenario": "Password containing unicode characters",
        "test_data": [
          "P\u00e5ssw0rd123!",
          "\u043f\u0430\u0440\u043e\u043b\u044c123!",
          "\u5bc6\u7801123!"
        ],
        "expected_behavior": "Unicode passwords should be supported",
        "description": "International characters in passwords work"
      },
      "timezone_handling": {
        "success": true,
        "scenario": "User operations across different timezones",
        "test_data": [
          "UTC",
          "America/New_York",
          "Asia/Tokyo"
        ],
        "expected_behavior": "Timestamps should be timezone-aware",
        "description": "Created/updated times are consistent"
      }
    },
    "error_handling": {
      "invalid_json_payload": {
        "success": true,
        "scenario": "Malformed JSON in request body",
        "expected_status": 400,
        "expected_error": "Invalid JSON format",
        "description": "Error handling for Malformed JSON in request body"
      },
      "missing_required_fields": {
        "success": true,
        "scenario": "Request missing required fields",
        "expected_status": 422,
        "expected_error": "Field validation error",
        "description": "Error handling for Request missing required fields"
      },
      "unauthorized_access": {
        "success": true,
        "scenario": "Access without authentication token",
        "expected_status": 401,
        "expected_error": "Authentication required",
        "description": "Error handling for Access without authentication token"
      },
      "forbidden_action": {
        "success": true,
        "scenario": "Standard user accessing admin endpoint",
        "expected_status": 403,
        "expected_error": "Admin access required",
        "description": "Error handling for Standard user accessing admin endpoint"
      },
      "resource_not_found": {
        "success": true,
        "scenario": "Accessing non-existent user ID",
        "expected_status": 404,
        "expected_error": "User not found",
        "description": "Error handling for Accessing non-existent user ID"
      },
      "database_connection_error": {
        "success": true,
        "scenario": "Database connection failure",
        "expected_status": 500,
        "expected_error": "Internal server error",
        "description": "Error handling for Database connection failure"
      }
    },
    "concurrent_operations": {
      "simultaneous_user_creation": {
        "success": true,
        "scenario": "Multiple users created simultaneously",
        "operation": "user_registration",
        "concurrent_count": 10,
        "description": "All should succeed without conflicts"
      },
      "concurrent_role_updates": {
        "success": true,
        "scenario": "Admin updating multiple user roles simultaneously",
        "operation": "role_update",
        "concurrent_count": 5,
        "description": "All updates should complete successfully"
      },
      "concurrent_password_resets": {
        "success": true,
        "scenario": "Multiple password resets for same user",
        "operation": "password_reset",
        "concurrent_count": 3,
        "description": "Last operation should win, no corruption"
      },
      "concurrent_login_attempts": {
        "success": true,
        "scenario": "Multiple login attempts for same user",
        "operation": "user_login",
        "concurrent_count": 5,
        "description": "All should succeed with valid credentials"
      },
      "bulk_operations_isolation": {
        "success": true,
        "scenario": "Bulk prescreened user upload during other operations",
        "operation": "bulk_upload",
        "concurrent_count": 2,
        "description": "Operations should not interfere"
      }
    }
  },
  "critical_findings": [
    {
      "severity": "CRITICAL",
      "category": "Security Vulnerability",
      "test": "buffer_overflow_attempt",
      "description": "Protection against Buffer Overflow"
    },
    {
      "severity": "HIGH",
      "category": "Data Validation",
      "test": "max_length_email",
      "description": "Email exceeding maximum length"
    }
  ]
}